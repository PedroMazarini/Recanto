/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import Classes.Comanda;
import Classes.Data_transfer;
import Classes.Produto;
import Classes.Usuario;
import DAO.ComandaDAO;
import DAO.DAO;
import DAO.ProdutoDAO;
import DAO.UsuarioDAO;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import java.util.Timer;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PedroMazarini
 */
public class Tela_login extends javax.swing.JFrame {

    /**
     * Creates new form Tela_login
     */
    List<Comanda> lista_comandasAberta = new ArrayList();
    List<Comanda> lista_comandasHoje = new ArrayList();
    List<Produto> lista_produtos = new ArrayList<Produto>();  
    List<Usuario> lista_usuarios = new ArrayList<>();
    Data_transfer data_transfer = new Data_transfer(); 
    Tela_fundo fundo;
    public Tela_login() {
        
        initComponents();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        text_codigo.requestFocus();
        initiate_table();
        fundo = new Tela_fundo();
        showOnScreen(1, fundo); //ATIVAR NOVAMENTE QUANDO USAR DOIS MONITORES
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label_top = new javax.swing.JLabel();
        text_codigo = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        label_abertas = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        label_fechadas = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_comandas = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Recanto");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });
        addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                formPropertyChange(evt);
            }
        });

        label_top.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 36)); // NOI18N
        label_top.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_top.setText("Nº Comanda:");
        label_top.setFocusable(false);

        text_codigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_codigoActionPerformed(evt);
            }
        });
        text_codigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                text_codigoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                text_codigoKeyReleased(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        label_abertas.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 24)); // NOI18N
        label_abertas.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        label_abertas.setText(" ");

        jLabel2.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Abertas: ");

        label_fechadas.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 24)); // NOI18N
        label_fechadas.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        label_fechadas.setText(" ");

        jLabel3.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Fechadas:");

        jLabel1.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/checklist2.png"))); // NOI18N
        jLabel1.setText("COMANDAS");

        table_comandas.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        table_comandas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Número", "Chegada"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_comandas.setEnabled(false);
        table_comandas.setRowHeight(25);
        table_comandas.getTableHeader().setResizingAllowed(false);
        table_comandas.getTableHeader().setReorderingAllowed(false);
        table_comandas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_comandasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_comandas);
        if (table_comandas.getColumnModel().getColumnCount() > 0) {
            table_comandas.getColumnModel().getColumn(0).setResizable(false);
            table_comandas.getColumnModel().getColumn(0).setPreferredWidth(13);
            table_comandas.getColumnModel().getColumn(1).setResizable(false);
            table_comandas.getColumnModel().getColumn(2).setResizable(false);
            table_comandas.getColumnModel().getColumn(2).setPreferredWidth(8);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 787, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label_abertas, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label_fechadas, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 787, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(label_abertas)
                    .addComponent(jLabel3)
                    .addComponent(label_fechadas))
                .addContainerGap())
        );

        jMenu1.setText("Caixa");
        jMenu1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Movimento de Caixa");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Editar");
        jMenu2.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Usuários");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Produtos");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addComponent(label_top, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(396, 396, 396)
                        .addComponent(text_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 404, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label_top)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(text_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
   
    private void text_codigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_codigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_codigoActionPerformed

    public void refresh_table(){
        Timestamp dt;
        String currentTime;
        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) table_comandas.getModel();
        model.setRowCount(lista_comandasAberta.size());
        for (Comanda c : lista_comandasAberta)
            {
               
               java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("HH:mm");
               dt = c.getChegada();                 
               currentTime = sdf.format(dt);
               table_comandas.setValueAt(c.getNome(), lista_comandasAberta.indexOf(c), 0);
               table_comandas.setValueAt(c.getBar_code(), lista_comandasAberta.indexOf(c), 1);
               table_comandas.setValueAt(currentTime, lista_comandasAberta.indexOf(c), 2);
               
            }
        label_abertas.setText(String.valueOf(lista_comandasAberta.size()));
        label_fechadas.setText(String.valueOf(lista_comandasHoje.size()-lista_comandasAberta.size()));
    }
    
    public void initiate_table (){        
        
        
        
        DAO dao;
        lista_comandasAberta = new ArrayList();
        try {
            dao = new ComandaDAO();
            lista_comandasHoje = dao.listarHoje();
            for(Comanda c : lista_comandasHoje){
                if(!c.isFechada()){
                    lista_comandasAberta.add(c);
                }
            }
            System.out.println("lista abertas>>>"+lista_comandasAberta.size());
            refresh_table();
             
        } catch (SQLException ex) {
            Logger.getLogger(Tela_login.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }
    private void text_codigoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_codigoKeyReleased
      
    }//GEN-LAST:event_text_codigoKeyReleased

    public void adicionar_comanda(Tela_fecha_comanda tela_fecha){
        Tela_addComanda tela_addComanda = new Tela_addComanda(lista_comandasAberta,data_transfer,tela_fecha);
        tela_addComanda.setVisible(true);
    }
    
    public void bloqueia_tela(){
         boolean autorizado = false;     
            
            lista_usuarios = new ArrayList<Usuario>();
            DAO dao;
            while (autorizado==false){
                String cod_atendente= JOptionPane.showInputDialog(rootPane, "Atendente:", "Login", JOptionPane.QUESTION_MESSAGE);
                try {
                    dao = new UsuarioDAO();
                    lista_usuarios = dao.listarTodos();
                    data_transfer.setLista_usuarios(lista_usuarios);

                    for (Usuario u : lista_usuarios)
                    {
                       if (u.getCodigo().equals(cod_atendente)){
                           autorizado = true;
                           data_transfer.setUsuario(u);
                           break;
                       }

                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Tela_login.class.getName()).log(Level.SEVERE, null, ex);
                }
                if (autorizado== true){  
                    table_comandas.setEnabled(true);
                    text_codigo.setText("");
                    text_codigo.requestFocus();

                }else{
                    JOptionPane.showMessageDialog(rootPane, "Acesso Não Autorizado!","ERRO",
                     JOptionPane.ERROR_MESSAGE);
            }
            }
        
    }
    
    public boolean verifica_usuario (String cod_usuario){
        for(Usuario user: lista_usuarios){
            if (user.getCodigo().equals(cod_usuario)){
                text_codigo.setText("");
                bloqueia_tela();
                return true;
            }
        }
        return false;
    }
    
    private void text_codigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_codigoKeyPressed
          // TODO add your handling code here:
        
        boolean aberta = false;
      if (evt.getKeyCode()==KeyEvent.VK_ENTER){
            
            for(Comanda c : lista_comandasAberta){
                if (text_codigo.getText().equals(String.valueOf(c.getBar_code()))){
                    aberta=true;                    
                    call_comanda(c.getBar_code());
                }
            }
        if(!text_codigo.getText().isEmpty()){
            
            if((!aberta)&&(!verifica_usuario(text_codigo.getText()))){
                Font font = new Font(Font.SANS_SERIF, Font.BOLD, 18);
                UIManager.put("OptionPane.messageFont", font);
                UIManager.put("OptionPane.buttonFont", font);
                Object[] options = {"Sim","Não"};
                int resposta = JOptionPane.showOptionDialog(rootPane, "Deseja abrir a seguinte comanda? \n"+text_codigo.getText(), "Nova Comanda", 0, 3, null, options, options[0]);

                if(resposta==0){
                    boolean nome_ok = false;
                    Comanda c = new Comanda(); 
                    c.setNome(JOptionPane.showInputDialog(rootPane, "Digite o Nome:", "Cliente", JOptionPane.QUESTION_MESSAGE));                    
                    c.setBar_code(Integer.valueOf(text_codigo.getText()));
                    DAO dao;
                    if (c.getNome()!=null){
                        if(c.getNome().length()<=1){
                        while (nome_ok==false){                                
                               c.setNome(JOptionPane.showInputDialog("Nome inválido digite novamente:")); 
                               if (c.getNome()!=null){
                                   if (c.getNome().length()>1){
                                       nome_ok=true;
                                       text_codigo.setText("");
                                   }

                               }else{
                                   nome_ok=true;
                                   text_codigo.setText("");
                               }


                        }
                        }
                    }
                    if (c.getNome()!=null){    
                        try {
                            dao = new ComandaDAO();
                            dao.salvar(c);
                            Comanda c_busca = new Comanda();
                            c_busca =  (Comanda) dao.buscar(c.getBar_code());
                            lista_comandasAberta.add(c_busca);
                            lista_comandasHoje.add(c_busca);
                            refresh_table();
                            text_codigo.setText("");
                            call_comanda(c.getBar_code());
                        } catch (SQLException ex) {
                            Logger.getLogger(Tela_login.class.getName()).log(Level.SEVERE, null, ex);
                        } 
                    }else{
                    text_codigo.setText("");
                    }
                }else{
                    text_codigo.setText("");
                }
            }
        }else{
            JOptionPane.showMessageDialog(rootPane, "Comanda inválida!");
        }   
        text_codigo.setText("");
      }
    }//GEN-LAST:event_text_codigoKeyPressed

    public void call_comanda (int comanda_barcode){               
         Comanda comanda = new Comanda();   
         Timestamp dt;
                
                
                for (Comanda c : lista_comandasAberta){  
                    if (c.getBar_code() == comanda_barcode){   
                        java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("HH:mm");
                        dt = c.getChegada(); 
                        data_transfer.setComanda(c);
                        data_transfer.setChegada(sdf.format(dt));
                        data_transfer.setFrame(this);

                        data_transfer.setLista_produtos(lista_produtos);
                        data_transfer.setTela_login(this);
                        data_transfer.getFrame().setEnabled(false); 
                        data_transfer.setLista_usuarios(lista_usuarios);
                        Tela_comanda t_comanda = new Tela_comanda(data_transfer);
                        t_comanda.setVisible(true);
                        
                        
                    }
                    
                }
    }
    
    public  void showOnScreen( int screen, JFrame frame )
    {
        GraphicsEnvironment ge = GraphicsEnvironment
            .getLocalGraphicsEnvironment();
        GraphicsDevice[] gs = ge.getScreenDevices();
        
        if( screen > -1 && screen < gs.length )
        {
            gs[screen].setFullScreenWindow( frame );
        }
        else if( gs.length > 0 )
        {
           // gs[0].setFullScreenWindow( frame );
        }
        else
        {
            throw new RuntimeException( "No Screens Found" );
        }
    }
    
    private void table_comandasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_comandasMouseClicked
       text_codigo.requestFocus();
        JTable table =(JTable) evt.getSource();
        Point p = evt.getPoint();
        int row = table.rowAtPoint(p);
        if (evt.getClickCount() == 2) {
            if (table_comandas.isEnabled()){ 
                int table_row = table_comandas.getSelectedRow();   
                if (table_comandas.getValueAt(table_row, 0)!= null){
                    for (Comanda c : lista_comandasAberta){                
                        if (c.getBar_code()==Integer.valueOf((int) table_comandas.getValueAt(table_row,1))){
                            //comanda.setId(c.getId());
                            call_comanda(c.getBar_code());
                        } 
                }
                }
                
            } 
            
        }
            // your valueChanged overridden method 
    }//GEN-LAST:event_table_comandasMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        bloqueia_tela();
           
            DAO dao;
        try {
            dao = new ProdutoDAO();
            lista_produtos = dao.listarTodos();
            data_transfer.setLista_produtos(lista_produtos);
           
        } catch (SQLException ex) {
            Logger.getLogger(Tela_login.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowOpened

    public Tela_fundo getFundo(){
        return fundo;
    }
    private void formPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_formPropertyChange
       
    }//GEN-LAST:event_formPropertyChange

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        text_codigo.requestFocus();
    }//GEN-LAST:event_formFocusGained

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        data_transfer.setTela_login(this);
        data_transfer.setLista_usuarios(lista_usuarios);
        Tela_Caixa tela_caixa = new Tela_Caixa(data_transfer);
        this.setEnabled(false);
        tela_caixa.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        data_transfer.setTela_login(this);
        Tela_usuarios tela_usuario = new Tela_usuarios(data_transfer);
        this.setEnabled(false);
        tela_usuario.setVisible(true);
        tela_usuario.setAlwaysOnTop(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        data_transfer.setTela_login(this);
        data_transfer.setLista_produtos(lista_produtos);
        Tela_editaProdutos telaEditaProdutos = new Tela_editaProdutos(data_transfer);
        this.setEnabled(false);
        telaEditaProdutos.setVisible(true);
        telaEditaProdutos.setAlwaysOnTop(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    public void setListaProdutos(List<Produto> lista_prod){
        lista_produtos= lista_prod;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela_login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela_login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela_login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela_login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tela_login().setVisible(true);                
                
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel label_abertas;
    private javax.swing.JLabel label_fechadas;
    private javax.swing.JLabel label_top;
    private javax.swing.JTable table_comandas;
    private javax.swing.JTextField text_codigo;
    // End of variables declaration//GEN-END:variables
}
